{{template "public/header" .}}

<style>
  /* 全局样式重置 */
  * { margin: 0; padding: 0; box-sizing: border-box; }
  body { font-family: "Helvetica Neue", Arial, sans-serif; background: #f0f2f5; color: #333; }

  .upload-container {
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 30px 20px;
    max-width: 600px;
    margin: 40px auto;
    transition: transform 0.3s;
  }
  .upload-container:hover { transform: translateY(-4px); }

  h1 {
    font-size: 1.8rem;
    margin-bottom: 20px;
    color: #2c3e50;
  }

  .custom-file-input {
    display: none;
  }
  .custom-file-label {
    display: inline-flex;
    align-items: center;
    padding: 12px 24px;
    background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
    color: #fff;
    font-weight: bold;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s;
  }
  .custom-file-label:hover {
    background: linear-gradient(135deg, #5a0eb8 0%, #1e65e0 100%);
  }

  #uploadButton {
    padding: 12px 30px;
    margin-top: 15px;
    background: #27ae60;
    color: #fff;
    font-weight: bold;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s, transform 0.2s;
  }
  #uploadButton:hover {
    background: #219150;
    transform: translateY(-2px);
  }
  #uploadButton:active { transform: translateY(0); }

  .note {
    margin-top: 10px;
    font-size: 0.9em;
    color: #e74c3c;
  }

  #loading {
    display: none;
    margin-top: 15px;
    font-size: 1em;
    color: #555;
    animation: blink 1.2s infinite;
  }
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.4; }
  }

  #response {
    margin-top: 20px;
    width: 100%;
    padding: 15px;
    background: #f9f9f9;
    border-radius: 6px;
    font-family: monospace;
    white-space: pre-wrap;
    word-break: break-all;
  }

  @media (max-width: 600px) {
    .upload-container {
      margin: 20px 10px;
      padding: 20px;
    }
    .custom-file-label, #uploadButton {
      width: 100%;
      justify-content: center;
    }
  }
</style>

<main class="upload-container">
  <h1>上传图片到 Telegram</h1>
  <label for="uploadFile" id="uploadFileLabel" class="custom-file-label">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16" style="margin-right:8px;"><path d="M.5 9.9V14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V9.9l-3.5-3.5-2.3 2.3L8 5.793 5.3 8.7l-2.3-2.3L.5 9.9z"/><path d="M7.5 5.5V.5h1v5h2l-2.5 2.5L5 5.5h2.5z"/></svg>
    选择图片
  </label>
  <input type="file" name="image" id="uploadFile" accept=".jpg, .jpeg, .png" class="custom-file-input" multiple>
  <button id="uploadButton">上传</button>
  <p class="note">请勿上传超过5MB的文件。</p>
  <div id="loading">上传中，请稍候...</div>
  <div id="response" class="ui-widget"></div>
</main>

<script>
  const uploadFile = document.getElementById('uploadFile');
  const uploadLabel = document.getElementById('uploadFileLabel');
  const uploadButton = document.getElementById('uploadButton');
  const loading = document.getElementById('loading');
  const response = document.getElementById('response');

  uploadFile.addEventListener('change', () => {
    if (uploadFile.files.length) {
      uploadLabel.innerHTML = `已选择 ${uploadFile.files.length} 个文件`;
      const tooLarge = Array.from(uploadFile.files).some(f => f.size > 5 * 1024 * 1024);
      if (tooLarge) alert('请勿上传超过5MB的文件');
    } else {
      uploadLabel.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" viewBox=\"0 0 16 16\" style=\"margin-right:8px;\"><path d=\"M.5 9.9V14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V9.9l-3.5-3.5-2.3 2.3L8 5.793 5.3 8.7l-2.3-2.3L.5 9.9z\"/><path d=\"M7.5 5.5V.5h1v5h2l-2.5 2.5L5 5.5h2.5z\"/></svg> 选择图片`;
    }
  });

  uploadButton.addEventListener('click', () => {
    if (!uploadFile.files.length) return alert('请选择文件');
    const tooLarge = Array.from(uploadFile.files).some(f => f.size > 5 * 1024 * 1024);
    if (tooLarge) return alert('请勿上传超过5MB的文件');

    const formData = new FormData();
    Array.from(uploadFile.files).forEach(f => formData.append('image', f));

    loading.style.display = 'block';
    response.textContent = '';
    fetch('', { method: 'POST', body: formData })
      .then(res => res.json())
      .then(data => { response.textContent = JSON.stringify(data, null, 2); })
      .catch(err => { response.textContent = '上传失败，请重试。'; })
      .finally(() => { loading.style.display = 'none'; });
  });
</script>

{{template "public/footer" .}}
